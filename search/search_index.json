{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>some</p>"},{"location":"licence/","title":"MIT License","text":"<p>Copyright (c) 2025 Macalister Vadim</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"en/","title":"Welcome to the Online Shop Project Documentation","text":""},{"location":"en/#about-the-project","title":"About the Project","text":"<p>This project is a modern order allocation service built using Domain-Driven Design (DDD), Clean Architecture, and Onion Architecture. It is designed for managing orders, product batches, and their allocation in a warehouse, with a focus on scalability, testability, and code clarity.</p>"},{"location":"en/#goals","title":"Goals","text":"<ul> <li>Efficient management of orders and product batches</li> <li>Flexible architecture for easy extension and maintenance</li> <li>High test coverage (TDD)</li> <li>Easy onboarding for new developers</li> </ul>"},{"location":"en/#main-entities","title":"Main Entities","text":"<ul> <li>SKU \u2014 unique product identifier</li> <li>Customers \u2014 individuals or organizations placing orders</li> <li>Orders \u2014 customer requests for products</li> <li>Batches \u2014 groups of products with unique characteristics</li> <li>Order line allocation \u2014 process of distributing products among batches</li> </ul>"},{"location":"en/#diagram","title":"Diagram","text":""},{"location":"en/#glossary","title":"Glossary","text":"<ul> <li>OrderLine \u2014 order line item</li> <li>Batch \u2014 product batch</li> <li>Product \u2014 aggregate that groups batches</li> <li>Allocation \u2014 allocation of an order line to a batch</li> </ul>"},{"location":"en/#quick-start","title":"Quick Start","text":"<ul> <li>Installation &amp; Launch Guide</li> <li>Architecture &amp; Patterns</li> <li>REST API</li> <li>FAQ</li> </ul>"},{"location":"en/faq/","title":"FAQ (Frequently Asked Questions)","text":""},{"location":"en/faq/#1-what-tech-stack-is-used-in-the-project","title":"1. What tech stack is used in the project?","text":"<ul> <li>Python 3.9+</li> <li>Flask (REST API)</li> <li>SQLAlchemy (ORM)</li> <li>PostgreSQL (DB)</li> <li>Docker, Docker Compose</li> <li>Makefile for automation</li> <li>Pytest for testing</li> </ul>"},{"location":"en/faq/#2-how-is-the-architecture-organized","title":"2. How is the architecture organized?","text":"<ul> <li>DDD, Clean Architecture, Onion Architecture</li> <li>Layers: entrypoints (API), service_layer (services, UOW), domain (models), adapters (repositories, ORM)</li> <li>Patterns: Repository, Unit of Work, Ports &amp; Adapters, Dependency Inversion</li> </ul>"},{"location":"en/faq/#3-how-to-quickly-run-the-project","title":"3. How to quickly run the project?","text":"<ul> <li>Use make build and make up</li> <li>All tests: make test</li> <li>See installation guide for details</li> </ul>"},{"location":"en/faq/#4-how-to-add-a-new-api-endpoint","title":"4. How to add a new API endpoint?","text":"<ul> <li>Add a handler function in src/allocation/entrypoints/flask_app.py</li> <li>Register a new route with @app.route</li> <li>Document the new endpoint in docs/en/api/rest.md</li> </ul>"},{"location":"en/faq/#5-how-to-write-tests","title":"5. How to write tests?","text":"<ul> <li>Tests are in tests/unit, tests/integration, tests/e2e</li> <li>Use Pytest</li> <li>For unit tests, you can mock repositories and UOW</li> </ul>"},{"location":"en/faq/#6-how-is-db-schema-migration-handled","title":"6. How is DB schema migration handled?","text":"<ul> <li>Schema is defined in src/allocation/adapters/orm.py</li> <li>For migrations, use Alembic (not included by default)</li> </ul>"},{"location":"en/faq/#7-how-to-extend-the-domain-model","title":"7. How to extend the domain model?","text":"<ul> <li>Add new entities/aggregates in src/allocation/domain/model.py</li> <li>Implement business logic in domain models</li> <li>Use services for orchestration</li> </ul>"},{"location":"en/faq/#8-how-to-configure-environment-variables","title":"8. How to configure environment variables?","text":"<ul> <li>All variables are described in src/allocation/config.py</li> <li>Set them via .env or directly in docker-compose.yml</li> </ul>"},{"location":"en/faq/#9-what-is-the-onboarding-process-for-a-new-developer","title":"9. What is the onboarding process for a new developer?","text":"<ol> <li>Read the documentation (index, install, architecture)</li> <li>Run the project locally</li> <li>Review tests and business logic</li> <li>Try adding a test or endpoint</li> </ol> <p>\u2190 Back to Table of Contents</p>"},{"location":"en/install/","title":"Installation &amp; Launch Guide","text":""},{"location":"en/install/#requirements","title":"Requirements","text":"<ul> <li>Docker and Docker Compose</li> <li>Make</li> <li>Python 3.9+ (if running locally, not via Docker)</li> </ul>"},{"location":"en/install/#quick-start-recommended","title":"Quick Start (Recommended)","text":"<ol> <li>Clone the repository:    <pre><code>git clone https://github.com/your-org/online-shop.git\ncd online-shop\n</code></pre></li> <li>Build and start the services:    <pre><code>make build\nmake up\n</code></pre></li> <li>Check that the service is available:</li> <li>API: http://localhost:5005 (or the port specified in docker-compose.yml)</li> </ol>"},{"location":"en/install/#running-tests","title":"Running Tests","text":"<ul> <li>All tests:   <pre><code>make test\n</code></pre></li> <li>Unit tests:   <pre><code>make unit-tests\n</code></pre></li> <li>Integration tests:   <pre><code>make integration-tests\n</code></pre></li> <li>E2E tests:   <pre><code>make e2e-tests\n</code></pre></li> </ul>"},{"location":"en/install/#environment-variables","title":"Environment Variables","text":"<ul> <li>DB_HOST \u2014 database host (default: localhost)</li> <li>DB_PASSWORD \u2014 database user password (default: abc123)</li> <li>API_HOST \u2014 API host (default: localhost)</li> </ul>"},{"location":"en/install/#manual-launch-without-docker","title":"Manual Launch (without Docker)","text":"<ol> <li>Install dependencies:    <pre><code>pip install -r requirements.txt\npip install -e src\n</code></pre></li> <li>Start Postgres locally and set environment variables.</li> <li>Run the Flask app:    <pre><code>export FLASK_APP=allocation.entrypoints.flask_app\nexport PYTHONPATH=src\nflask run --host=0.0.0.0 --port=5005\n</code></pre></li> </ol> <p>\u2190 Back to Table of Contents</p>"},{"location":"en/api/rest/","title":"REST API","text":""},{"location":"en/api/rest/#base-url","title":"Base URL","text":"<ul> <li>Default: <code>http://localhost:5005</code></li> <li>In Docker: the port may be overridden in <code>docker-compose.yml</code></li> </ul>"},{"location":"en/api/rest/#post-allocate","title":"POST /allocate","text":"<p>Purpose: Allocate an order line to a product batch.</p> <p>Sample request: <pre><code>POST /allocate\n{\n  \"orderid\": \"order-123\",\n  \"sku\": \"CHAIR-RED\",\n  \"qty\": 10\n}\n</code></pre></p> <p>Sample successful response: <pre><code>{\n  \"batchref\": \"batch-001\"\n}\n</code></pre></p> <p>Errors: - 400, if the product is out of stock or SKU is invalid</p>"},{"location":"en/api/rest/#post-add_batch","title":"POST /add_batch","text":"<p>Purpose: Add a new product batch.</p> <p>Sample request: <pre><code>POST /add_batch\n{\n  \"ref\": \"batch-001\",\n  \"sku\": \"CHAIR-RED\",\n  \"qty\": 100,\n  \"eta\": \"2025-06-12\"  // or null if the batch is in stock\n}\n</code></pre></p> <p>Sample successful response: <pre><code>OK\n</code></pre></p>"},{"location":"en/api/rest/#notes","title":"Notes","text":"<ul> <li>All requests and responses are in JSON format</li> <li>Use Postman or curl for testing</li> <li>To extend the API, add new endpoints in <code>src/allocation/entrypoints/flask_app.py</code></li> </ul> <p>\u2190 Back to Table of Contents</p>"},{"location":"en/archeticture/components/","title":"Architecture &amp; Patterns","text":""},{"location":"en/archeticture/components/#architectural-approaches","title":"Architectural Approaches","text":"<p>The project is based on Domain-Driven Design (DDD), Clean Architecture, and Onion Architecture principles. This ensures: - Clear separation of business logic and infrastructure - Easy testing and extension - Domain model independence from frameworks</p>"},{"location":"en/archeticture/components/#ddd-domain-driven-design","title":"DDD (Domain-Driven Design)","text":"<ul> <li>Domain Model (<code>src/allocation/domain/model.py</code>): contains business logic, aggregates (Product), entities (Batch, OrderLine), value objects</li> <li>Services (<code>src/allocation/service_layer/services.py</code>): implement use cases, orchestrate aggregates</li> <li>Repositories (<code>src/allocation/adapters/repository.py</code>): abstraction for data access</li> <li>UOW (Unit of Work) (<code>src/allocation/service_layer/unit_of_work.py</code>): transaction and consistency management</li> </ul>"},{"location":"en/archeticture/components/#clean-architecture-onion-architecture","title":"Clean Architecture / Onion Architecture","text":"<ul> <li>Outer layer: entrypoints (Flask API)</li> <li>Service layer: orchestration, business scenarios</li> <li>Domain layer: business logic, aggregates, entities</li> <li>Infrastructure layer: ORM, repositories, integrations</li> </ul>"},{"location":"en/archeticture/components/#patterns","title":"Patterns","text":"<ul> <li>Repository \u2014 abstracts DB access, allows easy replacement (e.g., for tests)</li> <li>Unit of Work \u2014 ensures atomicity and transaction management</li> <li>Ports &amp; Adapters (Hexagonal Architecture) \u2014 API and infrastructure are connected via abstractions</li> <li>Dependency Inversion \u2014 dependencies are injected via constructors and abstractions, not hardcoded</li> </ul>"},{"location":"en/archeticture/components/#directory-structure","title":"Directory Structure","text":"<ul> <li>src/allocation/domain/ \u2014 domain models, business exceptions</li> <li>src/allocation/service_layer/ \u2014 services, UOW, use cases</li> <li>src/allocation/adapters/ \u2014 repositories, ORM mappings</li> <li>src/allocation/entrypoints/ \u2014 Flask app (REST API)</li> <li>tests/ \u2014 unit, integration, and e2e tests</li> </ul>"},{"location":"en/archeticture/components/#advantages-of-the-architecture","title":"Advantages of the Architecture","text":"<ul> <li>Scalability and maintainability</li> <li>Easy testing (TDD)</li> <li>Business logic independence from infrastructure</li> <li>Fast technology or API replacement</li> </ul>"},{"location":"en/archeticture/components/#layer-diagram","title":"Layer Diagram","text":"<pre><code>[ API (Flask) ]\n      \u2193\n[ Service Layer ]\n      \u2193\n[ Domain Model ]\n      \u2193\n[ Infrastructure (ORM, DB) ]\n</code></pre>"},{"location":"en/archeticture/components/#more-on-patterns","title":"More on Patterns","text":"<ul> <li>Repository: src/allocation/adapters/repository.py</li> <li>Unit of Work: src/allocation/service_layer/unit_of_work.py</li> <li>Services: src/allocation/service_layer/services.py</li> <li>Models: src/allocation/domain/model.py</li> </ul> <p>\u2190 Back to Table of Contents</p>"},{"location":"ru/","title":"\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0443 Online Shop","text":""},{"location":"ru/#_1","title":"\u041e \u043f\u0440\u043e\u0435\u043a\u0442\u0435","text":"<p>\u042d\u0442\u043e\u0442 \u043f\u0440\u043e\u0435\u043a\u0442 \u2014 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c Domain-Driven Design (DDD), Clean Architecture \u0438 Onion Architecture. \u041e\u043d \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430\u043c\u0438, \u043f\u0430\u0440\u0442\u0438\u044f\u043c\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0438 \u0438\u0445 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435, \u0441 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043e\u043c \u043d\u0430 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c, \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c \u0438 \u0447\u0438\u0441\u0442\u043e\u0442\u0443 \u043a\u043e\u0434\u0430.</p>"},{"location":"ru/#_2","title":"\u0426\u0435\u043b\u0438 \u0438 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<ul> <li>\u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430\u043c\u0438 \u0438 \u043f\u0430\u0440\u0442\u0438\u044f\u043c\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432</li> <li>\u0413\u0438\u0431\u043a\u0430\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438</li> <li>\u0412\u044b\u0441\u043e\u043a\u043e\u0435 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 (TDD)</li> <li>\u041f\u0440\u043e\u0441\u0442\u043e\u0442\u0430 \u043e\u043d\u0431\u043e\u0440\u0434\u0438\u043d\u0433\u0430 \u043d\u043e\u0432\u044b\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432</li> </ul>"},{"location":"ru/#_3","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>SKU \u2014 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430</li> <li>\u041a\u043b\u0438\u0435\u043d\u0442\u044b \u2014 \u043b\u0438\u0446\u0430 \u0438\u043b\u0438 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438, \u043e\u0444\u043e\u0440\u043c\u043b\u044f\u044e\u0449\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u044b</li> <li>\u0417\u0430\u043a\u0430\u0437\u044b \u2014 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440\u044b</li> <li>\u041f\u0430\u0440\u0442\u0438\u0438 \u2014 \u0433\u0440\u0443\u043f\u043f\u044b \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\u0438</li> <li>\u0420\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0439 \u0437\u0430\u043a\u0430\u0437\u0430 \u2014 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043f\u043e \u043f\u0430\u0440\u0442\u0438\u044f\u043c</li> </ul>"},{"location":"ru/#_4","title":"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430","text":""},{"location":"ru/#_5","title":"\u0413\u043b\u043e\u0441\u0441\u0430\u0440\u0438\u0439","text":"<ul> <li>OrderLine \u2014 \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430</li> <li>Batch \u2014 \u043f\u0430\u0440\u0442\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u0430</li> <li>Product \u2014 \u0430\u0433\u0440\u0435\u0433\u0430\u0442, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0438\u0439 \u043f\u0430\u0440\u0442\u0438\u0438</li> <li>Allocation \u2014 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0437\u0430\u043a\u0430\u0437\u0430 \u0432 \u043f\u0430\u0440\u0442\u0438\u0438</li> </ul>"},{"location":"ru/#_6","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442","text":"<ul> <li>\u0413\u0430\u0439\u0434 \u043f\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0443</li> <li>\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b</li> <li>REST API</li> <li>FAQ</li> </ul>"},{"location":"ru/faq/","title":"FAQ (\u0427\u0430\u0441\u0442\u043e \u0437\u0430\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b)","text":""},{"location":"ru/faq/#1","title":"1. \u041a\u0430\u043a\u043e\u0439 \u0441\u0442\u0435\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435?","text":"<ul> <li>Python 3.9+</li> <li>Flask (REST API)</li> <li>SQLAlchemy (ORM)</li> <li>PostgreSQL (\u0411\u0414)</li> <li>Docker, Docker Compose</li> <li>Makefile \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438</li> <li>Pytest \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"ru/faq/#2","title":"2. \u041a\u0430\u043a \u0443\u0441\u0442\u0440\u043e\u0435\u043d\u0430 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430?","text":"<ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f DDD, Clean Architecture, Onion Architecture</li> <li>\u0421\u043b\u043e\u0438: entrypoints (API), service_layer (\u0441\u0435\u0440\u0432\u0438\u0441\u044b, UOW), domain (\u043c\u043e\u0434\u0435\u043b\u0438), adapters (\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438, ORM)</li> <li>\u041f\u0430\u0442\u0442\u0435\u0440\u043d\u044b: Repository, Unit of Work, Ports &amp; Adapters, \u0438\u043d\u0432\u0435\u0440\u0441\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> </ul>"},{"location":"ru/faq/#3","title":"3. \u041a\u0430\u043a \u0431\u044b\u0441\u0442\u0440\u043e \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442?","text":"<ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b make build \u0438 make up</li> <li>\u0412\u0441\u0435 \u0442\u0435\u0441\u0442\u044b: make test</li> <li>\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u2014 \u0441\u043c. \u0433\u0430\u0439\u0434 \u043f\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435</li> </ul>"},{"location":"ru/faq/#4-endpoint-api","title":"4. \u041a\u0430\u043a \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 endpoint \u0432 API?","text":"<ul> <li>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432 src/allocation/entrypoints/flask_app.py</li> <li>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0447\u0435\u0440\u0435\u0437 @app.route</li> <li>\u041e\u043f\u0438\u0448\u0438\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 endpoint \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 (docs/ru/api/rest.md)</li> </ul>"},{"location":"ru/faq/#5","title":"5. \u041a\u0430\u043a \u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u044b?","text":"<ul> <li>\u0422\u0435\u0441\u0442\u044b \u043b\u0435\u0436\u0430\u0442 \u0432 tests/unit, tests/integration, tests/e2e</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 Pytest</li> <li>\u0414\u043b\u044f unit-\u0442\u0435\u0441\u0442\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043c\u043e\u043a\u0430\u0442\u044c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \u0438 UOW</li> </ul>"},{"location":"ru/faq/#6","title":"6. \u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0441\u0445\u0435\u043c\u044b \u0411\u0414?","text":"<ul> <li>\u0421\u0445\u0435\u043c\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u0430 \u0432 src/allocation/adapters/orm.py</li> <li>\u0414\u043b\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Alembic (\u043d\u0435 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0443 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e)</li> </ul>"},{"location":"ru/faq/#7","title":"7. \u041a\u0430\u043a \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c \u0434\u043e\u043c\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c?","text":"<ul> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438/\u0430\u0433\u0440\u0435\u0433\u0430\u0442\u044b \u0432 src/allocation/domain/model.py</li> <li>\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443 \u0432 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044f\u0445</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0434\u043b\u044f \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432</li> </ul>"},{"location":"ru/faq/#8","title":"8. \u041a\u0430\u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f?","text":"<ul> <li>\u0412\u0441\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0432 src/allocation/config.py</li> <li>\u041c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 .env \u0438\u043b\u0438 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432 docker-compose.yml</li> </ul>"},{"location":"ru/faq/#9","title":"9. \u041a\u0430\u043a\u043e\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043e\u043d\u0431\u043e\u0440\u0434\u0438\u043d\u0433\u0430 \u043d\u043e\u0432\u043e\u0433\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430?","text":"<ol> <li>\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e (index, install, architecture)</li> <li>\u0420\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e</li> <li>\u041e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u0438 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u043e\u0439</li> <li>\u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0435\u0441\u0442 \u0438\u043b\u0438 endpoint</li> </ol> <p>\u2190 \u041d\u0430\u0437\u0430\u0434 \u043a \u043e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u044e</p>"},{"location":"ru/install/","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a","text":""},{"location":"ru/install/#_2","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>Docker \u0438 Docker Compose</li> <li>Make</li> <li>Python 3.9+ (\u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e, \u043d\u0435 \u0447\u0435\u0440\u0435\u0437 Docker)</li> </ul>"},{"location":"ru/install/#_3","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442 (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f)","text":"<ol> <li>\u041a\u043b\u043e\u043d\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439:    <pre><code>git clone https://github.com/your-org/online-shop.git\ncd online-shop\n</code></pre></li> <li>\u0421\u043e\u0431\u0435\u0440\u0438\u0442\u0435 \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b:    <pre><code>make build\nmake up\n</code></pre></li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d:</li> <li>API: http://localhost:5005 (\u0438\u043b\u0438 \u043f\u043e\u0440\u0442, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0432 docker-compose.yml)</li> </ol>"},{"location":"ru/install/#_4","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432","text":"<ul> <li>\u0412\u0441\u0435 \u0442\u0435\u0441\u0442\u044b:   <pre><code>make test\n</code></pre></li> <li>\u041c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b:   <pre><code>make unit-tests\n</code></pre></li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b:   <pre><code>make integration-tests\n</code></pre></li> <li>E2E \u0442\u0435\u0441\u0442\u044b:   <pre><code>make e2e-tests\n</code></pre></li> </ul>"},{"location":"ru/install/#_5","title":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<ul> <li>DB_HOST \u2014 \u0430\u0434\u0440\u0435\u0441 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: localhost)</li> <li>DB_PASSWORD \u2014 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0411\u0414 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: abc123)</li> <li>API_HOST \u2014 \u0430\u0434\u0440\u0435\u0441 API (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: localhost)</li> </ul>"},{"location":"ru/install/#docker","title":"\u0420\u0443\u0447\u043d\u043e\u0439 \u0437\u0430\u043f\u0443\u0441\u043a (\u0431\u0435\u0437 Docker)","text":"<ol> <li>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438:    <pre><code>pip install -r requirements.txt\npip install -e src\n</code></pre></li> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 Postgres \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.</li> <li>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 Flask-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435:    <pre><code>export FLASK_APP=allocation.entrypoints.flask_app\nexport PYTHONPATH=src\nflask run --host=0.0.0.0 --port=5005\n</code></pre></li> </ol> <p>\u2190 \u041d\u0430\u0437\u0430\u0434 \u043a \u043e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u044e</p>"},{"location":"ru/api/rest/","title":"REST API","text":""},{"location":"ru/api/rest/#url","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 URL","text":"<ul> <li>\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>http://localhost:5005</code></li> <li>\u0412 Docker: \u043f\u043e\u0440\u0442 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 <code>docker-compose.yml</code></li> </ul>"},{"location":"ru/api/rest/#post-allocate","title":"POST /allocate","text":"<p>\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0440\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0437\u0430\u043a\u0430\u0437\u0430 \u0432 \u043f\u0430\u0440\u0442\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>POST /allocate\n{\n  \"orderid\": \"order-123\",\n  \"sku\": \"CHAIR-RED\",\n  \"qty\": 10\n}\n</code></pre></p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430: <pre><code>{\n  \"batchref\": \"batch-001\"\n}\n</code></pre></p> <p>\u041e\u0448\u0438\u0431\u043a\u0438: - 400, \u0435\u0441\u043b\u0438 \u0442\u043e\u0432\u0430\u0440\u0430 \u043d\u0435\u0442 \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 SKU</p>"},{"location":"ru/api/rest/#post-add_batch","title":"POST /add_batch","text":"<p>\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043f\u0430\u0440\u0442\u0438\u044e \u0442\u043e\u0432\u0430\u0440\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>POST /add_batch\n{\n  \"ref\": \"batch-001\",\n  \"sku\": \"CHAIR-RED\",\n  \"qty\": 100,\n  \"eta\": \"2025-06-12\"  // \u0438\u043b\u0438 null, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u0442\u0438\u044f \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\n}\n</code></pre></p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430: <pre><code>OK\n</code></pre></p>"},{"location":"ru/api/rest/#_1","title":"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f","text":"<ul> <li>\u0412\u0441\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u0432\u0435\u0442\u044b \u2014 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 JSON</li> <li>\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0434\u043e\u0431\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Postman \u0438\u043b\u0438 curl</li> <li>\u0414\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f API \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0435 endpoint'\u044b \u0432 <code>src/allocation/entrypoints/flask_app.py</code></li> </ul> <p>\u2190 \u041d\u0430\u0437\u0430\u0434 \u043a \u043e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u044e</p>"},{"location":"ru/archeticture/components/","title":"\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b","text":""},{"location":"ru/archeticture/components/#_2","title":"\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u044b\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044b","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u043d\u0430 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u0445 Domain-Driven Design (DDD), Clean Architecture \u0438 Onion Architecture. \u042d\u0442\u043e \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442: - \u0427\u0451\u0442\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b - \u041b\u0451\u0433\u043a\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f - \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u0432</p>"},{"location":"ru/archeticture/components/#ddd-domain-driven-design","title":"DDD (Domain-Driven Design)","text":"<ul> <li>\u0414\u043e\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c (src/allocation/domain/model.py): \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443, \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u044b (Product), \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 (Batch, OrderLine), value-\u043e\u0431\u044a\u0435\u043a\u0442\u044b.</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u044b (src/allocation/service_layer/services.py): \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u043e\u0432.</li> <li>\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 (src/allocation/adapters/repository.py): \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0434\u0430\u043d\u043d\u044b\u043c.</li> <li>UOW (Unit of Work) (src/allocation/service_layer/unit_of_work.py): \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ul>"},{"location":"ru/archeticture/components/#clean-architecture-onion-architecture","title":"Clean Architecture / Onion Architecture","text":"<ul> <li>\u0412\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u043b\u043e\u0439: entrypoints (Flask API)</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u0441\u043b\u043e\u0439: orchestration, \u0431\u0438\u0437\u043d\u0435\u0441-\u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438</li> <li>\u0414\u043e\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u043b\u043e\u0439: \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430, \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u044b, \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438</li> <li>\u0418\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043d\u044b\u0439 \u0441\u043b\u043e\u0439: ORM, \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438, \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"ru/archeticture/components/#_3","title":"\u041f\u0430\u0442\u0442\u0435\u0440\u043d\u044b","text":"<ul> <li>Repository \u2014 \u0430\u0431\u0441\u0442\u0440\u0430\u0433\u0438\u0440\u0443\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0411\u0414, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432)</li> <li>Unit of Work \u2014 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0430\u0442\u043e\u043c\u0430\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438</li> <li>Ports &amp; Adapters (Hexagonal Architecture) \u2014 API \u0438 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438</li> <li>\u0418\u043d\u0432\u0435\u0440\u0441\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u2014 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u043d\u0435\u0434\u0440\u044f\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u044b \u0438 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438, \u0430 \u043d\u0435 \u0436\u0451\u0441\u0442\u043a\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u044b</li> </ul>"},{"location":"ru/archeticture/components/#_4","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043e\u0432","text":"<ul> <li>src/allocation/domain/ \u2014 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u0431\u0438\u0437\u043d\u0435\u0441-\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f</li> <li>src/allocation/service_layer/ \u2014 \u0441\u0435\u0440\u0432\u0438\u0441\u044b, UOW, \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438</li> <li>src/allocation/adapters/ \u2014 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438, ORM-\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f</li> <li>src/allocation/entrypoints/ \u2014 Flask-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (REST API)</li> <li>tests/ \u2014 \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u0435, \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0438 e2e \u0442\u0435\u0441\u0442\u044b</li> </ul>"},{"location":"ru/archeticture/components/#_5","title":"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b","text":"<ul> <li>\u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c</li> <li>\u041b\u0451\u0433\u043a\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (TDD)</li> <li>\u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438 \u043e\u0442 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u0437\u0430\u043c\u0435\u043d\u044b \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0439 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 API</li> </ul>"},{"location":"ru/archeticture/components/#_6","title":"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043b\u043e\u0451\u0432","text":"<pre><code>[ API (Flask) ]\n      \u2193\n[ Service Layer ]\n      \u2193\n[ Domain Model ]\n      \u2193\n[ Infrastructure (ORM, DB) ]\n</code></pre>"},{"location":"ru/archeticture/components/#_7","title":"\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430\u0445","text":"<ul> <li>Repository: src/allocation/adapters/repository.py</li> <li>Unit of Work: src/allocation/service_layer/unit_of_work.py</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u044b: src/allocation/service_layer/services.py</li> <li>\u041c\u043e\u0434\u0435\u043b\u0438: src/allocation/domain/model.py</li> </ul> <p>\u2190 \u041d\u0430\u0437\u0430\u0434 \u043a \u043e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u044e</p>"}]}